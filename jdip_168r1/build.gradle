apply plugin: 'java'
apply plugin: 'application'


ant.importBuild 'build.xml'

repositories {

    mavenCentral()
}


dependencies {

    // Add all the jar dependencies from the lib folder.
    implementation fileTree(dir: 'lib', include: ['*.jar'])

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'com.jgoodies', name: 'jgoodies-common', version: '1.8.1'

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'
    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


}

test {
    useJUnitPlatform()
}

file('resource/variants').eachDir { dir ->
    def taskName = "${dir.name}Variants"
    def task = tasks.create(name: taskName, type: Zip) {
        archiveBaseName = taskName
        from fileTree(dir)
        destinationDirectory.set(file("build/tmp/variants"))
        group='variants'
    }
    test.dependsOn(task)
    run.dependsOn(task)

}
file('resource/symbols').eachDir { dir ->
    def taskName = "${dir.name}Symbols"
    def task = tasks.create(name: taskName, type: Zip) {
        archiveBaseName = taskName
        from fileTree(dir)
        destinationDirectory.set(file("build/tmp/variants"))
        group='variants'

    }
    test.dependsOn(task)
    run.dependsOn(task)
}

application {
    mainClass.set('info.jdip.gui.splash')
}

distributions {
    main {
        distributionBaseName = "jdip"
        contents{
            tasks.each {
                task ->
                    if (task.group == 'variants') {
                        from(task){
                            into 'variants'
                        }
                    }
            }

            from('.') {
                include 'README.TXT'
                include 'LICENSE.TXT'
                include 'HISTORY.TXT'
                include 'CHANGELOG.TXT'
            }
        }
    }
}

run{
    workingDir("build/tmp")
}



